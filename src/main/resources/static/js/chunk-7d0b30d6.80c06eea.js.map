{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///../../../src/components/VSlideGroup/VSlideGroup.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/rippleable/index.ts","webpack:///../../../src/mixins/selectable/index.ts","webpack:///../../../src/components/VSwitch/VSwitch.ts","webpack:///../../../src/directives/touch/index.ts","webpack:///../../../src/components/VChip/VChip.ts"],"names":["breakpoints","ALIGNMENT","makeProps","props","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","val","breakpoint","prop","cache","name","functional","tag","dense","noGutters","render","children","cacheKey","String","classList","value","h","data","staticClass","class","BaseSlideGroup","directives","Resize","Touch","activeClass","centerActive","nextIcon","mobileBreakPoint","Number","v","isNaN","parseInt","prevIcon","showArrows","Boolean","internalItemsLength","isOverflowing","resizeTimeout","startX","scrollOffset","widths","content","wrapper","computed","__cachedNext","this","genTransition","__cachedPrev","classes","hasAffixes","hasNext","Math","hasPrev","isMobile","$vuetify","width","watch","internalValue","beforeUpdate","$children","updated","methods","genNext","slot","$scopedSlots","next","$slots","$createElement","on","click","key","genContent","ref","genData","onResize","genIcon","icon","rtl","location","upperLocation","hasAffix","disabled","genPrev","prev","genWrapper","start","e","move","end","calculateNewOffset","sign","newAbosluteOffset","direction","onAffixClick","onTouchStart","onTouchMove","onTouchEnd","maxScrollOffset","overflowCheck","fn","scrollIntoView","selectedIndex","calculateCenteredOffset","selectedItem","calculateUpdatedOffset","clientWidth","selectedElement","offsetLeft","currentScrollOffset","totalWidth","itemOffset","additionalOffset","offsetCentered","scrollTo","$refs","setWidths","window","provide","slideGroup","valueComparator","ripple","genRipple","center","onChange","mixins","model","event","id","inputValue","falseValue","trueValue","multiple","label","hasColor","lazyValue","computedColor","isDark","isMultiple","Array","isActive","input","item","undefined","isDirty","rippleState","genLabel","VInput","genInput","attrs","role","domProps","checked","blur","change","focus","keydown","onKeydown","onBlur","length","onFocus","inset","loading","flat","validationState","hasError","switchData","setTextColor","themeClasses","genDefaultSlot","genSwitch","attrs$","left","right","onSwipeRight","genProgress","progress","VProgressCircular","color","size","indeterminate","onSwipeLeft","handleGesture","touchendY","dirRatio","minDistance","touchendX","touchstartX","touchstartY","touch","createHandlers","touchmoveX","touchmoveY","offsetX","offsetY","up","down","touchstart","touchend","touchmove","inserted","binding","target","el","options","passive","handlers","vnode","eventName","unbind","active","chipGroup","close","closeIcon","draggable","filter","filterIcon","link","outlined","pill","textColor","proxyClass","groupClasses","hasClose","isClickable","created","breakingProps","original","replacement","genFilter","genClose","tabindex","setBackgroundColor"],"mappings":"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","file":"js/chunk-7d0b30d6.80c06eea.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchmoveX: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<typeof BaseItemGroup>\n/* eslint-enable indent */\n>(\n  BaseItemGroup\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 1264,\n      validator: (v: any) => !isNaN(parseInt(v)),\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: Boolean,\n  },\n\n  data: () => ({\n    internalItemsLength: 0,\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      return (\n        (this.showArrows || !this.isMobile) &&\n        this.isOverflowing\n      )\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n    isMobile (): boolean {\n      return this.$vuetify.breakpoint.width < this.mobileBreakPoint\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      this.$refs.content.style.transform = `translateX(${-val}px)`\n    },\n  },\n\n  beforeUpdate () {\n    this.internalItemsLength = (this.$children || []).length\n  },\n\n  updated () {\n    if (this.internalItemsLength === (this.$children || []).length) return\n    this.setWidths()\n  },\n\n  methods: {\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      this.scrollOffset = this.startX - e.touchmoveX\n    },\n    onTouchEnd () {\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = this.calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = this.calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    calculateUpdatedOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean, currentScrollOffset: number): number {\n      const clientWidth = selectedElement.clientWidth\n      const offsetLeft = rtl\n        ? (widths.content - selectedElement.offsetLeft - clientWidth)\n        : selectedElement.offsetLeft\n\n      if (rtl) {\n        currentScrollOffset = -currentScrollOffset\n      }\n\n      const totalWidth = widths.wrapper + currentScrollOffset\n      const itemOffset = clientWidth + offsetLeft\n      const additionalOffset = clientWidth * 0.4\n\n      if (offsetLeft < currentScrollOffset) {\n        currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n      } else if (totalWidth < itemOffset) {\n        currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n      }\n\n      return rtl ? -currentScrollOffset : currentScrollOffset\n    },\n    calculateCenteredOffset (selectedElement: HTMLElement, widths: Widths, rtl: boolean): number {\n      const { offsetLeft, clientWidth } = selectedElement\n\n      if (rtl) {\n        const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n        return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      } else {\n        const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n        return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths /* istanbul ignore next */  () {\n      window.requestAnimationFrame(() => {\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        this.isOverflowing = this.widths.wrapper < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","// Directives\nimport ripple from '../../directives/ripple'\n\n// Types\nimport Vue, { VNode, VNodeData, VNodeDirective } from 'vue'\n\nexport default Vue.extend({\n  name: 'rippleable',\n\n  directives: { ripple },\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  methods: {\n    genRipple (data: VNodeData = {}): VNode | null {\n      if (!this.ripple) return null\n\n      data.staticClass = 'v-input--selection-controls__ripple'\n\n      data.directives = data.directives || []\n      data.directives.push({\n        name: 'ripple',\n        value: { center: true },\n      } as VNodeDirective)\n      data.on = Object.assign({\n        click: this.onChange,\n      }, this.$listeners)\n\n      return this.$createElement('div', data)\n    },\n    onChange () {},\n  },\n})\n","// Components\nimport VInput from '../../components/VInput'\n\n// Mixins\nimport Rippleable from '../rippleable'\nimport Comparable from '../comparable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  VInput,\n  Rippleable,\n  Comparable\n).extend({\n  name: 'selectable',\n\n  model: {\n    prop: 'inputValue',\n    event: 'change',\n  },\n\n  props: {\n    id: String,\n    inputValue: null as any,\n    falseValue: null as any,\n    trueValue: null as any,\n    multiple: {\n      type: Boolean,\n      default: null,\n    },\n    label: String,\n  },\n\n  data () {\n    return {\n      hasColor: this.inputValue,\n      lazyValue: this.inputValue,\n    }\n  },\n\n  computed: {\n    computedColor (): string | undefined {\n      if (!this.isActive) return undefined\n      if (this.color) return this.color\n      if (this.isDark && !this.appIsDark) return 'white'\n      return 'primary'\n    },\n    isMultiple (): boolean {\n      return this.multiple === true || (this.multiple === null && Array.isArray(this.internalValue))\n    },\n    isActive (): boolean {\n      const value = this.value\n      const input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) return false\n\n        return input.some(item => this.valueComparator(item, value))\n      }\n\n      if (this.trueValue === undefined || this.falseValue === undefined) {\n        return value\n          ? this.valueComparator(value, input)\n          : Boolean(input)\n      }\n\n      return this.valueComparator(input, this.trueValue)\n    },\n    isDirty (): boolean {\n      return this.isActive\n    },\n    rippleState (): string | undefined {\n      return !this.disabled && !this.validationState\n        ? undefined\n        : this.validationState\n    },\n  },\n\n  watch: {\n    inputValue (val) {\n      this.lazyValue = val\n      this.hasColor = val\n    },\n  },\n\n  methods: {\n    genLabel () {\n      const label = VInput.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label!.data!.on = {\n        click: (e: Event) => {\n          // Prevent label from\n          // causing the input\n          // to focus\n          e.preventDefault()\n\n          this.onChange()\n        },\n      }\n\n      return label\n    },\n    genInput (type: string, attrs: object) {\n      return this.$createElement('input', {\n        attrs: Object.assign({\n          'aria-checked': this.isActive.toString(),\n          disabled: this.isDisabled,\n          id: this.computedId,\n          role: type,\n          type,\n        }, attrs),\n        domProps: {\n          value: this.value,\n          checked: this.isActive,\n        },\n        on: {\n          blur: this.onBlur,\n          change: this.onChange,\n          focus: this.onFocus,\n          keydown: this.onKeydown,\n        },\n        ref: 'input',\n      })\n    },\n    onBlur () {\n      this.isFocused = false\n    },\n    onChange () {\n      if (this.isDisabled) return\n\n      const value = this.value\n      let input = this.internalValue\n\n      if (this.isMultiple) {\n        if (!Array.isArray(input)) {\n          input = []\n        }\n\n        const length = input.length\n\n        input = input.filter((item: any) => !this.valueComparator(item, value))\n\n        if (input.length === length) {\n          input.push(value)\n        }\n      } else if (this.trueValue !== undefined && this.falseValue !== undefined) {\n        input = this.valueComparator(input, this.trueValue) ? this.falseValue : this.trueValue\n      } else if (value) {\n        input = this.valueComparator(input, value) ? null : value\n      } else {\n        input = !input\n      }\n\n      this.validate(true, input)\n      this.internalValue = input\n      this.hasColor = input\n    },\n    onFocus () {\n      this.isFocused = true\n    },\n    /** @abstract */\n    onKeydown (e: Event) {},\n  },\n})\n","// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.disabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...this.attrs$,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n","import { VNodeDirective, VNode } from 'vue/types/vnode'\nimport { keys } from '../../util/helpers'\nimport { TouchHandlers, TouchValue, TouchWrapper } from 'types'\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchVNodeDirective extends VNodeDirective {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start &&\n    wrapper.start(Object.assign(event, wrapper))\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end &&\n    wrapper.end(Object.assign(event, wrapper))\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move && wrapper.move(Object.assign(event, wrapper))\n}\n\nfunction createHandlers (value: TouchHandlers): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const value = binding.value!\n  const target = value.parent ? el.parentElement : el\n  const options = value.options || { passive: true }\n\n  // Needed to pass unit tests\n  if (!target) return\n\n  const handlers = createHandlers(binding.value!)\n  target._touchHandlers = Object(target._touchHandlers)\n  target._touchHandlers![vnode.context!._uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName] as EventListener, options)\n  })\n}\n\nfunction unbind (el: HTMLElement, binding: TouchVNodeDirective, vnode: VNode) {\n  const target = binding.value!.parent ? el.parentElement : el\n  if (!target || !target._touchHandlers) return\n\n  const handlers = target._touchHandlers[vnode.context!._uid]\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n  delete target._touchHandlers[vnode.context!._uid]\n}\n\nexport const Touch = {\n  inserted,\n  unbind,\n}\n\nexport default Touch\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n"],"sourceRoot":""}